{
  "openapi": "3.1.0",
  "info": {
    "title": "Devices API",
    "description": "API for devices management",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Devices API",
      "description": "Device related resources"
    }
  ],
  "paths": {
    "/api/device/{id}": {
      "get": {
        "tags": [
          "Devices API"
        ],
        "summary": "Get a device by its id",
        "operationId": "findById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Device not found"
          }
        }
      },
      "put": {
        "tags": [
          "Devices API"
        ],
        "summary": "Update a device brand or/and name",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateDevice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "delete": {
        "tags": [
          "Devices API"
        ],
        "summary": "Delete a device by its ID",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "404": {
            "description": "Device not found for deletion"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/device": {
      "get": {
        "tags": [
          "Devices API"
        ],
        "summary": "Get all devices",
        "operationId": "findAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Devices API"
        ],
        "summary": "Create a new device with the status AVAILABLE",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateDevice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/device/state/{state}": {
      "get": {
        "tags": [
          "Devices API"
        ],
        "summary": "Get all devices by state",
        "operationId": "findByState",
        "parameters": [
          {
            "name": "state",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AVAILABLE",
                "IN_USE",
                "DISABLED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/api/device/brand/{brand}": {
      "get": {
        "tags": [
          "Devices API"
        ],
        "summary": "Get all devices by brand",
        "operationId": "findByBrand",
        "parameters": [
          {
            "name": "brand",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUpdateDevice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "validForCreation": {
            "type": "boolean"
          },
          "validForUpdate": {
            "type": "boolean"
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "AVAILABLE",
              "IN_USE",
              "DISABLED"
            ]
          },
          "creationTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}